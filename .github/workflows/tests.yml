name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      # - uses: actions/cache@v2
      #   id: cache-packages
      #   with:
      #     path: ${{ runner.temp }}/cache-linux
      #     key: ${{ runner.os }}-cache-packages-v2.1

      # - name: Copy Dependencies
      # if: steps.cache-packages.outputs.cache-hit == 'true'
      # env:
      #   SOURCE: ${{ runner.temp }}/cache-linux
      # run: |
      #   echo "# --------------------------------------------------------"
      #   echo "# Using Cached packages"
      #   ls -lha "${SOURCE}"
      #   sudo cp --force --recursive "${SOURCE}"/. /
      #   echo "# --------------------------------------------------------"

      - name: Install Dependencies
        # if: steps.cache-packages.outputs.cache-hit != 'true'
        # env:
        #   SOURCE: ${{ runner.temp }}/cache-linux
        run: |
          sudo apt-get install -y cmake
          pip install --upgrade pytest
          # echo "# --------------------------------------------------------"
          # echo "# Make cache directory"
          # rm -fR "${SOURCE}"
          # mkdir -p "${SOURCE}"
          # while IFS= read -r LINE
          # do
          #   sudo cp -a --parent "${LINE}" "${SOURCE}"
          # done < "${{ runner.temp }}"/snapshots/snapshot_new_files.txt
          # ls -lha "${SOURCE}"
          # echo ""
          # sudo du -sh "${SOURCE}" || true
          # echo "# --------------------------------------------------------"

      - name: Configure
        working-directory: ${{github.workspace}}
        run: mkdir -p build; cmake -DINSTALL_GTEST=OFF -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -S . -B build

      - name: Format and Lint Source Code
        working-directory: ${{github.workspace}}
        run: |
          clang-format-18 --dry-run -Werror src/*.cpp
          clang-tidy src/*.cpp -p ./build/compile_commands.json

      - name: Format and Lint Test Code
        working-directory: ${{github.workspace}}
        continue-on-error: true
        run: |
          clang-format-18 --dry-run -Werror test/unit_tests/*.cpp
          clang-tidy test/unit_tests/*.cpp -p ./build/compile_commands.json

      - name: Build
        working-directory: ${{github.workspace}}/build
        run: make

      - name: Run tests
        working-directory: ${{github.workspace}}/build
        run: |
          make test
